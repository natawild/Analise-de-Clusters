resultado=resultadoF
table(resultado)
boxplot(idade ~ resultado, main="Idade vs Resultado", xlab = "Ter ou não ter diabetes", ylab = "Idade do paciente", col.main="blue", col=(c("darkred", "darkgreen")))
boxplot(idade ~ resultado, main="Idade vs Resultado", xlab = "Ter ou não ter diabetes", ylab = "Idade do paciente", col.main="blue", col=(c("darkred", "darkgreen")))
knitr::opts_chunk$set(echo = TRUE)
#loira
#library(readr)
#diabetes <- read_csv("C:/Users/RP/Desktop/análise de clusters/trabalho/diabetes.csv")
#View(diabetes)
#marcia
#library(readr)
#diabetes <- read_csv("C:/Users/marci.MARCIA.000/Downloads/diabetes.csv")
#View(diabetes)
#samuel
#celia
library(readr)
diabetes <- read_csv("diabetes.csv")
View(diabetes)
#variável dependente
resultado <- diabetes$Outcome
#variáveis independentes
gravidez <- diabetes$Pregnancies
glicose <- diabetes$Glucose
pressaosangue <- diabetes$BloodPressure
espessurapele <- diabetes$SkinThickness
insulina <- diabetes$Insulin
imc <- diabetes$BMI
funcaogenetica <- diabetes$DiabetesPedigreeFunction
idade <- diabetes$Age
#criação das variáveis como fator
resultado.f <- factor(resultado)
resultado <- resultado.f
levels(resultado)<-c("Não","Sim")
is.factor(resultado)
# número de vezes que cada variável aparece
summary(resultado)
#summary dos dados
summary(diabetes)
table(resultado)
resultado <- c(500, 268)
bp <- barplot(resultado,
main = "Número de pacientes com diabetes",
ylab = "Número de pacientes",
xlab = "Tem ou não diabetes",
ylim = c(0,600),
names.arg = c("0", "1"),
col = c("darkgreen", "darkred"),
col.main = "blue",
horiz = FALSE)
text(bp,resultado+20,labels=as.character(resultado))
table(gravidez)
grav <- c(111, 135,103,75,68,57,50,45,38,28,24,11,9,10,2,1,1)
b <- barplot(grav,
main = "Gravidez",
xlab = "Número de gravidezes",
ylab = "Número de pacientes",
ylim = c(0,150),
names.arg = c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17),
col = c("lightblue"),
col.main="blue",
horiz = FALSE)
text(b,grav+10,labels=as.character(grav))
library(ggplot2)
ggplot(diabetes, aes(x = gravidez, fill = resultado)) + geom_bar()
library(ggplot2)
ggplot(diabetes, aes(x = gravidez, fill = resultado)) + geom_bar()
ggplot(diabetes, aes(x = gravidez, fill = resultadoF)) + geom_bar()
knitr::opts_chunk$set(echo = TRUE)
#loira
#library(readr)
#diabetes <- read_csv("C:/Users/RP/Desktop/análise de clusters/trabalho/diabetes.csv")
#View(diabetes)
#marcia
#library(readr)
#diabetes <- read_csv("C:/Users/marci.MARCIA.000/Downloads/diabetes.csv")
#View(diabetes)
#samuel
#celia
library(readr)
diabetes <- read_csv("diabetes.csv")
View(diabetes)
#variável dependente
resultado <- diabetes$Outcome
#variáveis independentes
gravidez <- diabetes$Pregnancies
glicose <- diabetes$Glucose
pressaosangue <- diabetes$BloodPressure
espessurapele <- diabetes$SkinThickness
insulina <- diabetes$Insulin
imc <- diabetes$BMI
funcaogenetica <- diabetes$DiabetesPedigreeFunction
idade <- diabetes$Age
#criação das variáveis como fator
resultado.f <- factor(resultado)
resultado <- resultado.f
levels(resultado)<-c("Não","Sim")
is.factor(resultado)
# número de vezes que cada variável aparece
summary(resultado)
#summary dos dados
summary(diabetes)
table(resultado)
resultado <- c(500, 268)
bp <- barplot(resultado,
main = "Número de pacientes com diabetes",
ylab = "Número de pacientes",
xlab = "Tem ou não diabetes",
ylim = c(0,600),
names.arg = c("0", "1"),
col = c("darkgreen", "darkred"),
col.main = "blue",
horiz = FALSE)
text(bp,resultado+20,labels=as.character(resultado))
table(gravidez)
grav <- c(111, 135,103,75,68,57,50,45,38,28,24,11,9,10,2,1,1)
b <- barplot(grav,
main = "Gravidez",
xlab = "Número de gravidezes",
ylab = "Número de pacientes",
ylim = c(0,150),
names.arg = c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17),
col = c("lightblue"),
col.main="blue",
horiz = FALSE)
text(b,grav+10,labels=as.character(grav))
library(ggplot2)
ggplot(diabetes, aes(x = gravidez, fill = resultadoF)) + geom_bar()
knitr::opts_chunk$set(echo = TRUE)
#loira
#library(readr)
#diabetes <- read_csv("C:/Users/RP/Desktop/análise de clusters/trabalho/diabetes.csv")
#View(diabetes)
#marcia
#library(readr)
#diabetes <- read_csv("C:/Users/marci.MARCIA.000/Downloads/diabetes.csv")
#View(diabetes)
#samuel
#celia
library(readr)
diabetes <- read_csv("diabetes.csv")
View(diabetes)
#variável dependente
resultado <- diabetes$Outcome
#variáveis independentes
gravidez <- diabetes$Pregnancies
glicose <- diabetes$Glucose
pressaosangue <- diabetes$BloodPressure
espessurapele <- diabetes$SkinThickness
insulina <- diabetes$Insulin
imc <- diabetes$BMI
funcaogenetica <- diabetes$DiabetesPedigreeFunction
idade <- diabetes$Age
#criação das variáveis como fator
resultadoF<- factor(resultado)
resultado <- resultadoF
levels(resultado)<-c("Não","Sim")
is.factor(resultado)
# número de vezes que cada variável aparece
summary(resultado)
#summary dos dados
summary(diabetes)
table(resultado)
resultado <- c(500, 268)
bp <- barplot(resultado,
main = "Número de pacientes com diabetes",
ylab = "Número de pacientes",
xlab = "Tem ou não diabetes",
ylim = c(0,600),
names.arg = c("0", "1"),
col = c("darkgreen", "darkred"),
col.main = "blue",
horiz = FALSE)
text(bp,resultado+20,labels=as.character(resultado))
table(gravidez)
grav <- c(111, 135,103,75,68,57,50,45,38,28,24,11,9,10,2,1,1)
b <- barplot(grav,
main = "Gravidez",
xlab = "Número de gravidezes",
ylab = "Número de pacientes",
ylim = c(0,150),
names.arg = c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17),
col = c("lightblue"),
col.main="blue",
horiz = FALSE)
text(b,grav+10,labels=as.character(grav))
library(ggplot2)
ggplot(diabetes, aes(x = gravidez, fill = resultadoF)) + geom_bar()
install.packages(corrplot)
library(corrplot)
matriz <- diabetes
res<- cor(matriz)
round(res,2)
corrplot(res, method = "color")
sapply(diabetes, function (x) sum(is.na(x)))
#saber se existem missing values
data<- subset(diabetes,select=c(1,2,3,4,5,6,7,8,9))
missmap(data, main = "Missing values vs observed")
knitr::opts_chunk$set(echo = TRUE)
#loira
#library(readr)
#diabetes <- read_csv("C:/Users/RP/Desktop/análise de clusters/trabalho/diabetes.csv")
#View(diabetes)
#marcia
#library(readr)
#diabetes <- read_csv("C:/Users/marci.MARCIA.000/Downloads/diabetes.csv")
#View(diabetes)
#samuel
#celia
library(readr)
diabetes <- read_csv("diabetes.csv")
View(diabetes)
#variável dependente
resultado <- diabetes$Outcome
#variáveis independentes
gravidez <- diabetes$Pregnancies
glicose <- diabetes$Glucose
pressaosangue <- diabetes$BloodPressure
espessurapele <- diabetes$SkinThickness
insulina <- diabetes$Insulin
imc <- diabetes$BMI
funcaogenetica <- diabetes$DiabetesPedigreeFunction
idade <- diabetes$Age
#criação das variáveis como fator
resultadoF<- factor(resultado)
resultado <- resultadoF
levels(resultado)<-c("Não","Sim")
is.factor(resultado)
# número de vezes que cada variável aparece
summary(resultado)
#summary dos dados
summary(diabetes)
table(resultado)
resultado <- c(500, 268)
bp <- barplot(resultado,
main = "Número de pacientes com diabetes",
ylab = "Número de pacientes",
xlab = "Tem ou não diabetes",
ylim = c(0,600),
names.arg = c("0", "1"),
col = c("darkgreen", "darkred"),
col.main = "blue",
horiz = FALSE)
text(bp,resultado+20,labels=as.character(resultado))
table(gravidez)
grav <- c(111, 135,103,75,68,57,50,45,38,28,24,11,9,10,2,1,1)
b <- barplot(grav,
main = "Gravidez",
xlab = "Número de gravidezes",
ylab = "Número de pacientes",
ylim = c(0,150),
names.arg = c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17),
col = c("lightblue"),
col.main="blue",
horiz = FALSE)
text(b,grav+10,labels=as.character(grav))
library(ggplot2)
ggplot(diabetes, aes(x = gravidez, fill = resultadoF)) + geom_bar()
install.packages(corrplot)
library(corrplot)
matriz <- diabetes
res<- cor(matriz)
round(res,2)
corrplot(res, method = "color")
sapply(diabetes, function (x) sum(is.na(x)))
#saber se existem missing values
data<- subset(diabetes,select=c(1,2,3,4,5,6,7,8,9))
missmap(data, main = "Missing values vs observed")
install.packages("Amelia")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
diabetes <- read_csv("diabetes.csv")
attach(diabetes)
library(Amelia)
sapply(diabetes, function (x) sum(is.na(x)))
#saber se existem missing values
data<- subset(diabetes,select=c(1,2,3,4,5,6,7,8,9))
missmap(data, main = "Missing values vs observed")
library(lattice)
dadosAtratar<- subset(diabetes,select=c(1,2,3,4,5,6,7,8,9))
missmap(dadosAtratar, main = "Missing values vs observed")
sapply(diabetes, function (x) sum(is.na(x)))
missing_data[missing_data <= 0] <- NA
missmap(dadosAtratar, main = "Missing values vs observed")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
diabetes <- read_csv("diabetes.csv")
attach(diabetes)
library(Amelia)
sapply(diabetes, function (x) sum(is.na(x)))
#saber se existem missing values
dadosAtratar<- subset(diabetes,select=c(1,2,3,4,5,6,7,8,9))
missmap(dadosAtratar, main = "Missing values vs observed")
library(lattice)
missing_data <- diabetes[,setdiff(names(diabetes), c('Outcome', 'Pregnancies'))]
features_miss_num <- apply(missing_data, 2, function(x) sum(x <= 0))
features_miss <- names(missing_data)[ features_miss_num > 0]
rows_miss <- apply(missing_data, 1, function(x) sum(x <= 0) >= 1)
sum(rows_miss)
missing_data[missing_data <= 0] <- NA
diabetes[, names(missing_data)] <- missing_data
#saber se existem missing values
data1 <- diabetes[,c(-8,-9)]
data1<- subset(diabetes,select=c(1,2,3,4,5,6,7))
missmap(data1, main = "Missing values vs observed")
# KNN imputation
orig_data <- diabetes
colSums(is.na(diabetes))
diabetes[,c(-8,-9)]
diabetes <- diabetes[,c(-8,-9)]
diabetes$Glucose[is.na(diabetes$Glucose)] <- mean(diabetes$Glucose,na.rm=T)
diabetes$Insulin[is.na(diabetes$Insulin)] <- mean(diabetes$Insulin,na.rm=T)
diabetes$SkinThickness[is.na(diabetes$SkinThickness)] <- mean(diabetes$SkinThickness,na.rm=T)
diabetes$BMI[is.na(diabetes$BMI)] <- mean(diabetes$BMI,na.rm=T)
diabetes$BloodPressure[is.na(diabetes$BloodPressure)] <- mean(diabetes$BloodPressure,na.rm=T)
Outcome <- factor(diabetes$Outcome)
levels(Outcome) <- c("Não", "Sim")
is.factor(Outcome)
summary(Outcome)
library(caret)
library(ggplot2)
# Prep Training e Test
set.seed(100)
trainDataIndex <- createDataPartition(Outcome, p=0.7, list = F) # 70% training data
library(Amelia)
sapply(diabetes, function (x) sum(is.na(x)))
#saber se existem missing values
dadosAtratar<- subset(diabetes,select=c(1,2,3,4,5,6,7,8,9))
Outcome <- factor(diabetes$Outcome)
levels(Outcome) <- c("Não", "Sim")
is.factor(Outcome)
summary(Outcome)
library(readr)
diabetes <- read_csv("diabetes.csv")
attach(diabetes)
library(Amelia)
sapply(diabetes, function (x) sum(is.na(x)))
dadosAtratar<- subset(diabetes,select=c(1,2,3,4,5,6,7,8,9))
missmap(dadosAtratar, main = "Missing values vs observed")
missmap(dadosAtratar, main = "Missing values vs observed")
library(lattice)
library(lattice)
library(Amelia)
sapply(diabetes, function (x) sum(is.na(x)))
#saber se existem missing values
dadosAtratar<- subset(diabetes,select=c(1,2,3,4,5,6,7,8,9))
missmap(dadosAtratar, main = "Missing values vs observed")
library(lattice)
missing_data <- diabetes[,setdiff(names(diabetes), c('Outcome', 'Pregnancies'))]
features_miss_num <- apply(missing_data, 2, function(x) sum(x <= 0))
features_miss <- names(missing_data)[ features_miss_num > 0]
rows_miss <- apply(missing_data, 1, function(x) sum(x <= 0) >= 1)
sum(rows_miss)
missing_data[missing_data <= 0] <- NA
diabetes[, names(missing_data)] <- missing_data
#saber se existem missing values
data1 <- diabetes[,c(-8,-9)]
data1<- subset(diabetes,select=c(1,2,3,4,5,6,7))
missmap(data1, main = "Missing values vs observed")
# KNN imputation
orig_data <- diabetes
colSums(is.na(diabetes))
diabetes[,c(-8,-9)]
diabetes <- diabetes[,c(-8,-9)]
diabetes$Glucose[is.na(diabetes$Glucose)] <- mean(diabetes$Glucose,na.rm=T)
diabetes$Insulin[is.na(diabetes$Insulin)] <- mean(diabetes$Insulin,na.rm=T)
diabetes$SkinThickness[is.na(diabetes$SkinThickness)] <- mean(diabetes$SkinThickness,na.rm=T)
diabetes$BMI[is.na(diabetes$BMI)] <- mean(diabetes$BMI,na.rm=T)
diabetes$BloodPressure[is.na(diabetes$BloodPressure)] <- mean(diabetes$BloodPressure,na.rm=T)
Outcome <- factor(diabetes$Outcome)
levels(Outcome) <- c("Não", "Sim")
is.factor(Outcome)
summary(Outcome)
library(readr)
diabetes <- read_csv("diabetes.csv")
attach(diabetes)
Outcome <- factor(diabetes$Outcome)
levels(Outcome) <- c("Não", "Sim")
is.factor(Outcome)
summary(Outcome)
library(Amelia)
library(lattice)
sapply(diabetes, function (x) sum(is.na(x)))
#saber se existem missing values
dadosAtratar<- subset(diabetes,select=c(1,2,3,4,5,6,7,8,9))
missmap(dadosAtratar, main = "Missing values vs observed")
missing_data <- diabetes[,setdiff(names(diabetes), c('Outcome', 'Pregnancies'))]
features_miss_num <- apply(missing_data, 2, function(x) sum(x <= 0))
features_miss <- names(missing_data)[ features_miss_num > 0]
rows_miss <- apply(missing_data, 1, function(x) sum(x <= 0) >= 1)
sum(rows_miss)
missing_data[missing_data <= 0] <- NA
diabetes[, names(missing_data)] <- missing_data
#saber se existem missing values
data1 <- diabetes[,c(-8,-9)]
data1<- subset(diabetes,select=c(1,2,3,4,5,6,7))
missmap(data1, main = "Missing values vs observed")
# KNN imputation
orig_data <- diabetes
colSums(is.na(diabetes))
diabetes[,c(-8,-9)]
diabetes <- diabetes[,c(-8,-9)]
diabetes$Glucose[is.na(diabetes$Glucose)] <- mean(diabetes$Glucose,na.rm=T)
diabetes$Insulin[is.na(diabetes$Insulin)] <- mean(diabetes$Insulin,na.rm=T)
diabetes$SkinThickness[is.na(diabetes$SkinThickness)] <- mean(diabetes$SkinThickness,na.rm=T)
diabetes$BMI[is.na(diabetes$BMI)] <- mean(diabetes$BMI,na.rm=T)
diabetes$BloodPressure[is.na(diabetes$BloodPressure)] <- mean(diabetes$BloodPressure,na.rm=T)
library(caret)
library(ggplot2)
# Prep Training e Test
set.seed(100)
trainDataIndex <- createDataPartition(Outcome, p=0.7, list = F) # 70% training data
train <- diabetes[trainDataIndex, ]
test <- diabetes[-trainDataIndex, ]
#Modelo
model <- glm(Outcome~.,family=binomial(link='logit'),data=train)
# Logistic Regression
model.glm <- glm(Outcome~.,data=train.data,family = binomial(link='logit'))
# Logistic Regression
model.glm <- glm(Outcome~.,data=train,family = binomial(link='logit'))
library(caret)
library(ggplot2)
# Logistic Regression
model.glm <- glm(Outcome~.,data=train,family = binomial(link='logit'))
modelo <- glm(Outcome~.,data=train,family = binomial(link='logit'))
train <- diabetes[trainDataIndex,]
test <- diabetes[-trainDataIndex,]
library(readr)
diabetes <- read_csv("diabetes.csv")
attach(diabetes)
Outcome <- factor(diabetes$Outcome)
levels(Outcome) <- c("Não", "Sim")
is.factor(Outcome)
summary(Outcome)
library(Amelia)
library(lattice)
sapply(diabetes, function (x) sum(is.na(x)))
#saber se existem missing values
dadosAtratar<- subset(diabetes,select=c(1,2,3,4,5,6,7,8,9))
missmap(dadosAtratar, main = "Missing values vs observed")
missing_data <- diabetes[,setdiff(names(diabetes), c('Outcome', 'Pregnancies'))]
features_miss_num <- apply(missing_data, 2, function(x) sum(x <= 0))
features_miss <- names(missing_data)[ features_miss_num > 0]
rows_miss <- apply(missing_data, 1, function(x) sum(x <= 0) >= 1)
sum(rows_miss)
missing_data[missing_data <= 0] <- NA
diabetes[, names(missing_data)] <- missing_data
#saber se existem missing values
data1 <- diabetes[,c(-8,-9)]
data1<- subset(diabetes,select=c(1,2,3,4,5,6,7))
missmap(data1, main = "Missing values vs observed")
# KNN imputation
orig_data <- diabetes
colSums(is.na(diabetes))
diabetes[,c(-8,-9)]
diabetes <- diabetes[,c(-8,-9)]
diabetes$Glucose[is.na(diabetes$Glucose)] <- mean(diabetes$Glucose,na.rm=T)
diabetes$Insulin[is.na(diabetes$Insulin)] <- mean(diabetes$Insulin,na.rm=T)
diabetes$SkinThickness[is.na(diabetes$SkinThickness)] <- mean(diabetes$SkinThickness,na.rm=T)
diabetes$BMI[is.na(diabetes$BMI)] <- mean(diabetes$BMI,na.rm=T)
diabetes$BloodPressure[is.na(diabetes$BloodPressure)] <- mean(diabetes$BloodPressure,na.rm=T)
```{r seed}
library(caret)
library(ggplot2)
# Prep Training e Test
set.seed(120)
trainDataIndex <- createDataPartition(Outcome, p=0.7, list = F) # 70% training data
train <- diabetes[trainDataIndex,]
test <- diabetes[-trainDataIndex,]
#Modelo
model <- glm(Outcome ~.,family=binomial(link='logit'),data=train)
model <- glm(Outcome~.,family=binomial(link='logit'),data=train)
model <-glm(formula = Survived ~ ., family = binomial(link = "logit"), data = train)
#Modelo
model <-glm(formula = Outcome ~ ., family = binomial(link = "logit"), data = train)
set.seed(12345)
ratio = sample(1:nrow(data), size = 0.20*nrow(data))
library(caret)
library(ggplot2)
# Create training and testing set
set.seed(12345)
ratio = sample(1:nrow(diabetes), size = 0.20*nrow(diabetes))
test.data = diabetes[ratio,] #Test dataset 20% of total
train.data = diabetes[-ratio,] #Train dataset 80% of total
model.glm <- glm(Outcome~.,data=train.data,family = binomial)
model.glm <- glm(Outcome~.,data=train.data,family = binomial)
model.glm <- glm(Outcome~.,data=train.data,family = binomial)
model.glm <- glm(Outcome~.,data=train.data,family = binomial)
model.glm <- glm(Outcome~.,data=train.data,family = binomial)
model.glm <- glm(Outcome~.,data=train.data,family = binomial)
model.glm <- glm(Outcome~.,data=train.data,family = binomial)
model.glm <- glm(Outcome~.,data=train.data,family = binomial)
model.glm <- glm(Outcome~.,data=train.data,family = binomial)
model.glm <- glm(Outcome~.,data=train.data,family = binomial)
model.glm <- glm(Outcome~.,data=train.data,family = binomial)
variable.type <- lapply(diabetes, class)
library(readr)
diabetes <- read_csv("diabetes.csv")
attach(diabetes)
variable.type <- lapply(diabetes, class)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
diabetes <- read_csv("diabetes.csv")
attach(diabetes)
knitr::opts_chunk$set(echo = TRUE)
library(Amelia)
sapply(diabetes, function (x) sum(is.na(x)))
#saber se existem missing values
data<- subset(diabetes,select=c(1,2,3,4,5,6,7,8,9))
missmap(data, main = "Missing values vs observed")
install.packages("pscl")
knitr::opts_chunk$set(echo = TRUE)
View(diabetes)
